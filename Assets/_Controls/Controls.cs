//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/_Controls/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""ShipControls"",
            ""id"": ""fb8b9f1e-474c-488f-8d06-02e1960b9cb4"",
            ""actions"": [
                {
                    ""name"": ""SideMotion"",
                    ""type"": ""PassThrough"",
                    ""id"": ""bdec651a-5440-4ea9-b2d0-1c3514c9e062"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DashRight"",
                    ""type"": ""Button"",
                    ""id"": ""a6c30a8c-886e-4582-b0b2-f7618ab91d74"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DashLeft"",
                    ""type"": ""Button"",
                    ""id"": ""213ba522-8330-4267-8180-572f47e5dfaa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DashTouch"",
                    ""type"": ""Button"",
                    ""id"": ""5807d3e8-3627-4ff0-b7dd-039b9828e747"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TouchPos"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6c43129e-12e5-4d0e-b0e2-5bb178df3b70"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tilt"",
                    ""type"": ""Value"",
                    ""id"": ""d46fffc7-509d-425c-a95a-6fe583163779"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""StopTouch"",
                    ""type"": ""Button"",
                    ""id"": ""0e829560-b258-40e3-9d84-81a602999058"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SlowDown"",
                    ""type"": ""Button"",
                    ""id"": ""abfeeb80-4e2b-40e6-bf0e-89c65d8b23e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""cbc2282d-3f69-4075-bf75-6e3dafe97ccd"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DashLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55be2ab4-3950-4fa8-93b4-bd5b376db06a"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DashLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a0b037c-7b79-470f-a359-015052f3cd8c"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""MultiTap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DashTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""60b7257a-2b30-4fb4-9b9d-6d5534757397"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a70ddbf1-7439-469d-84d6-33a0935c7ee1"",
                    ""path"": ""<Gamepad>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tilt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Mouse Axis"",
                    ""id"": ""9c0b46c4-e3c7-4ea2-bb15-a593f28f4ba1"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tilt"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""49574340-5ced-46fb-b74d-68490bb8f5c1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tilt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""87750dae-41c1-4f7e-adbd-ab46b762f15f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tilt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""XB Axis"",
                    ""id"": ""84c12304-706c-40a2-b76a-054216ae212e"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tilt"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""c3997e53-7c7f-4c1d-b459-9560e9ca2fc7"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tilt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""004bcad9-5958-41d5-915e-3429e040d4ce"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tilt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Trigger Axis"",
                    ""id"": ""7184fe1f-1082-48c9-8df0-f8203c565345"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tilt"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""f6faddc9-7e21-410b-88cb-aad886c89e1d"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tilt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""0f16474f-ae7c-41dd-a8d2-ea51785f88db"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tilt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""cc1d53dc-c343-436f-a2bd-4c119eff32d8"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StopTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""373b1133-8c41-4166-a177-eceeb334307f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SlowDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""e8f0155c-d3fd-4415-a4c1-d7dc56a20eef"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SideMotion"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8fc69e4f-ce01-4a98-9de1-bb51ed2ae3c9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SideMotion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""86a35ef8-bf45-4487-96a0-56cdd4ab26f6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SideMotion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e974b07e-c4d3-496a-8629-bc7d4036c2ed"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SideMotion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""233ba7f0-1421-474c-831b-c8d7c5c9b9e6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SideMotion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""03ce65d1-625f-421a-8b6e-39f62d43c54a"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DashRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eac20f14-62a4-4cc5-aa89-1fa666ce9bf4"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DashRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // ShipControls
        m_ShipControls = asset.FindActionMap("ShipControls", throwIfNotFound: true);
        m_ShipControls_SideMotion = m_ShipControls.FindAction("SideMotion", throwIfNotFound: true);
        m_ShipControls_DashRight = m_ShipControls.FindAction("DashRight", throwIfNotFound: true);
        m_ShipControls_DashLeft = m_ShipControls.FindAction("DashLeft", throwIfNotFound: true);
        m_ShipControls_DashTouch = m_ShipControls.FindAction("DashTouch", throwIfNotFound: true);
        m_ShipControls_TouchPos = m_ShipControls.FindAction("TouchPos", throwIfNotFound: true);
        m_ShipControls_Tilt = m_ShipControls.FindAction("Tilt", throwIfNotFound: true);
        m_ShipControls_StopTouch = m_ShipControls.FindAction("StopTouch", throwIfNotFound: true);
        m_ShipControls_SlowDown = m_ShipControls.FindAction("SlowDown", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // ShipControls
    private readonly InputActionMap m_ShipControls;
    private IShipControlsActions m_ShipControlsActionsCallbackInterface;
    private readonly InputAction m_ShipControls_SideMotion;
    private readonly InputAction m_ShipControls_DashRight;
    private readonly InputAction m_ShipControls_DashLeft;
    private readonly InputAction m_ShipControls_DashTouch;
    private readonly InputAction m_ShipControls_TouchPos;
    private readonly InputAction m_ShipControls_Tilt;
    private readonly InputAction m_ShipControls_StopTouch;
    private readonly InputAction m_ShipControls_SlowDown;
    public struct ShipControlsActions
    {
        private @Controls m_Wrapper;
        public ShipControlsActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @SideMotion => m_Wrapper.m_ShipControls_SideMotion;
        public InputAction @DashRight => m_Wrapper.m_ShipControls_DashRight;
        public InputAction @DashLeft => m_Wrapper.m_ShipControls_DashLeft;
        public InputAction @DashTouch => m_Wrapper.m_ShipControls_DashTouch;
        public InputAction @TouchPos => m_Wrapper.m_ShipControls_TouchPos;
        public InputAction @Tilt => m_Wrapper.m_ShipControls_Tilt;
        public InputAction @StopTouch => m_Wrapper.m_ShipControls_StopTouch;
        public InputAction @SlowDown => m_Wrapper.m_ShipControls_SlowDown;
        public InputActionMap Get() { return m_Wrapper.m_ShipControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ShipControlsActions set) { return set.Get(); }
        public void SetCallbacks(IShipControlsActions instance)
        {
            if (m_Wrapper.m_ShipControlsActionsCallbackInterface != null)
            {
                @SideMotion.started -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnSideMotion;
                @SideMotion.performed -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnSideMotion;
                @SideMotion.canceled -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnSideMotion;
                @DashRight.started -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnDashRight;
                @DashRight.performed -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnDashRight;
                @DashRight.canceled -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnDashRight;
                @DashLeft.started -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnDashLeft;
                @DashLeft.performed -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnDashLeft;
                @DashLeft.canceled -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnDashLeft;
                @DashTouch.started -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnDashTouch;
                @DashTouch.performed -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnDashTouch;
                @DashTouch.canceled -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnDashTouch;
                @TouchPos.started -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnTouchPos;
                @TouchPos.performed -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnTouchPos;
                @TouchPos.canceled -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnTouchPos;
                @Tilt.started -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnTilt;
                @Tilt.performed -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnTilt;
                @Tilt.canceled -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnTilt;
                @StopTouch.started -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnStopTouch;
                @StopTouch.performed -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnStopTouch;
                @StopTouch.canceled -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnStopTouch;
                @SlowDown.started -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnSlowDown;
                @SlowDown.performed -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnSlowDown;
                @SlowDown.canceled -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnSlowDown;
            }
            m_Wrapper.m_ShipControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @SideMotion.started += instance.OnSideMotion;
                @SideMotion.performed += instance.OnSideMotion;
                @SideMotion.canceled += instance.OnSideMotion;
                @DashRight.started += instance.OnDashRight;
                @DashRight.performed += instance.OnDashRight;
                @DashRight.canceled += instance.OnDashRight;
                @DashLeft.started += instance.OnDashLeft;
                @DashLeft.performed += instance.OnDashLeft;
                @DashLeft.canceled += instance.OnDashLeft;
                @DashTouch.started += instance.OnDashTouch;
                @DashTouch.performed += instance.OnDashTouch;
                @DashTouch.canceled += instance.OnDashTouch;
                @TouchPos.started += instance.OnTouchPos;
                @TouchPos.performed += instance.OnTouchPos;
                @TouchPos.canceled += instance.OnTouchPos;
                @Tilt.started += instance.OnTilt;
                @Tilt.performed += instance.OnTilt;
                @Tilt.canceled += instance.OnTilt;
                @StopTouch.started += instance.OnStopTouch;
                @StopTouch.performed += instance.OnStopTouch;
                @StopTouch.canceled += instance.OnStopTouch;
                @SlowDown.started += instance.OnSlowDown;
                @SlowDown.performed += instance.OnSlowDown;
                @SlowDown.canceled += instance.OnSlowDown;
            }
        }
    }
    public ShipControlsActions @ShipControls => new ShipControlsActions(this);
    public interface IShipControlsActions
    {
        void OnSideMotion(InputAction.CallbackContext context);
        void OnDashRight(InputAction.CallbackContext context);
        void OnDashLeft(InputAction.CallbackContext context);
        void OnDashTouch(InputAction.CallbackContext context);
        void OnTouchPos(InputAction.CallbackContext context);
        void OnTilt(InputAction.CallbackContext context);
        void OnStopTouch(InputAction.CallbackContext context);
        void OnSlowDown(InputAction.CallbackContext context);
    }
}
