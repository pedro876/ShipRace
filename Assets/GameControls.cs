//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/GameControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameControls"",
    ""maps"": [
        {
            ""name"": ""ShipControls"",
            ""id"": ""fb8b9f1e-474c-488f-8d06-02e1960b9cb4"",
            ""actions"": [
                {
                    ""name"": ""LeftHorizontalAxis"",
                    ""type"": ""PassThrough"",
                    ""id"": ""24726482-28b1-4be3-96cc-c47c1021d833"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftVerticalAxis"",
                    ""type"": ""PassThrough"",
                    ""id"": ""522dafdc-f5e9-42ca-95d0-678a6539b10a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DashRight"",
                    ""type"": ""Button"",
                    ""id"": ""a6c30a8c-886e-4582-b0b2-f7618ab91d74"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DashLeft"",
                    ""type"": ""Button"",
                    ""id"": ""213ba522-8330-4267-8180-572f47e5dfaa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""11416f6a-2cae-4705-8085-3572ee4b5e6a"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftHorizontalAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""d16f7f1c-f8f7-44a6-916c-e464d3bda282"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftHorizontalAxis"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""530800f0-6d09-48e8-a26c-bda23a48f9e2"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftHorizontalAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""fa366006-3b93-4770-9d86-6202ebb9f5d1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftHorizontalAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis Dpad"",
                    ""id"": ""3696dd21-915f-4242-8e69-cb22561cf8ca"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftHorizontalAxis"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d079f684-dc12-44db-8edb-8a7874bd4459"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftHorizontalAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""f7b89bbb-65a8-449e-ba63-9760ca9531b7"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftHorizontalAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""377cac76-54d9-4d4a-a010-aa0be7b6d0ab"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftVerticalAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""7af6dc3a-12eb-4596-b671-638cde61f7d8"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftVerticalAxis"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""14207151-b887-4f9a-9412-d0fee834d436"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftVerticalAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""5fad972d-b110-4be5-87bc-8cd84cf52ee7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftVerticalAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis Dpad"",
                    ""id"": ""0e9e1107-5e75-439d-a91b-aaaf2f6c1232"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftVerticalAxis"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d0cb1655-b6f7-4905-9536-e99557eee6f1"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftVerticalAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""81a874dd-b4d7-492c-ad11-306686ad68e8"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftVerticalAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""03ce65d1-625f-421a-8b6e-39f62d43c54a"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DashRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eac20f14-62a4-4cc5-aa89-1fa666ce9bf4"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DashRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a0b037c-7b79-470f-a359-015052f3cd8c"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""MultiTap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DashRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cbc2282d-3f69-4075-bf75-6e3dafe97ccd"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DashLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55be2ab4-3950-4fa8-93b4-bd5b376db06a"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DashLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // ShipControls
        m_ShipControls = asset.FindActionMap("ShipControls", throwIfNotFound: true);
        m_ShipControls_LeftHorizontalAxis = m_ShipControls.FindAction("LeftHorizontalAxis", throwIfNotFound: true);
        m_ShipControls_LeftVerticalAxis = m_ShipControls.FindAction("LeftVerticalAxis", throwIfNotFound: true);
        m_ShipControls_DashRight = m_ShipControls.FindAction("DashRight", throwIfNotFound: true);
        m_ShipControls_DashLeft = m_ShipControls.FindAction("DashLeft", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // ShipControls
    private readonly InputActionMap m_ShipControls;
    private IShipControlsActions m_ShipControlsActionsCallbackInterface;
    private readonly InputAction m_ShipControls_LeftHorizontalAxis;
    private readonly InputAction m_ShipControls_LeftVerticalAxis;
    private readonly InputAction m_ShipControls_DashRight;
    private readonly InputAction m_ShipControls_DashLeft;
    public struct ShipControlsActions
    {
        private @GameControls m_Wrapper;
        public ShipControlsActions(@GameControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftHorizontalAxis => m_Wrapper.m_ShipControls_LeftHorizontalAxis;
        public InputAction @LeftVerticalAxis => m_Wrapper.m_ShipControls_LeftVerticalAxis;
        public InputAction @DashRight => m_Wrapper.m_ShipControls_DashRight;
        public InputAction @DashLeft => m_Wrapper.m_ShipControls_DashLeft;
        public InputActionMap Get() { return m_Wrapper.m_ShipControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ShipControlsActions set) { return set.Get(); }
        public void SetCallbacks(IShipControlsActions instance)
        {
            if (m_Wrapper.m_ShipControlsActionsCallbackInterface != null)
            {
                @LeftHorizontalAxis.started -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnLeftHorizontalAxis;
                @LeftHorizontalAxis.performed -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnLeftHorizontalAxis;
                @LeftHorizontalAxis.canceled -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnLeftHorizontalAxis;
                @LeftVerticalAxis.started -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnLeftVerticalAxis;
                @LeftVerticalAxis.performed -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnLeftVerticalAxis;
                @LeftVerticalAxis.canceled -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnLeftVerticalAxis;
                @DashRight.started -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnDashRight;
                @DashRight.performed -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnDashRight;
                @DashRight.canceled -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnDashRight;
                @DashLeft.started -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnDashLeft;
                @DashLeft.performed -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnDashLeft;
                @DashLeft.canceled -= m_Wrapper.m_ShipControlsActionsCallbackInterface.OnDashLeft;
            }
            m_Wrapper.m_ShipControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LeftHorizontalAxis.started += instance.OnLeftHorizontalAxis;
                @LeftHorizontalAxis.performed += instance.OnLeftHorizontalAxis;
                @LeftHorizontalAxis.canceled += instance.OnLeftHorizontalAxis;
                @LeftVerticalAxis.started += instance.OnLeftVerticalAxis;
                @LeftVerticalAxis.performed += instance.OnLeftVerticalAxis;
                @LeftVerticalAxis.canceled += instance.OnLeftVerticalAxis;
                @DashRight.started += instance.OnDashRight;
                @DashRight.performed += instance.OnDashRight;
                @DashRight.canceled += instance.OnDashRight;
                @DashLeft.started += instance.OnDashLeft;
                @DashLeft.performed += instance.OnDashLeft;
                @DashLeft.canceled += instance.OnDashLeft;
            }
        }
    }
    public ShipControlsActions @ShipControls => new ShipControlsActions(this);
    public interface IShipControlsActions
    {
        void OnLeftHorizontalAxis(InputAction.CallbackContext context);
        void OnLeftVerticalAxis(InputAction.CallbackContext context);
        void OnDashRight(InputAction.CallbackContext context);
        void OnDashLeft(InputAction.CallbackContext context);
    }
}
